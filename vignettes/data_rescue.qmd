---
title: "tidypollute: Getting Started"
author: "Dr. Nelson Roque"
format: html
editor: visual
---

# Getting Started with `tidypollute`

## Goals of this Notebook

This notebook demonstrates how to **download and stack** EPA AirData files for **1991** focusing on **WIND** data. However, you can build upon this workflow to back up all available EPA data.

------------------------------------------------------------------------

## Types of Requests

There are two main types of requests:

1.  **Single-analyte (Simple) Requests** – Retrieve data for a single pollutant.
2.  **Custom Requests** – Extract and process multiple datasets.

Below are examples of each approach.

------------------------------------------------------------------------

## Simple Request: Download Ozone Data

The simplest request retrieves EPA AirData for a specific **analyte** (pollutant) over a given time range.

```{r}
library(tidypollute)

# Download daily ozone (44201) data for 1991-1992
ozone <- get_epa_airdata(analyte = "44201", 
                         start_year = 1991, 
                         end_year = 1992, 
                         unit = "daily")


```

------------------------------------------------------------------------

## Custom Requests: Retrieving and Downloading EPA AirData

### Step 1: Get Available Data Links

EPA AirData is available as zip files. You can retrieve a **table of dataset links** using:

```{r}
library(tidyverse)
library(tidypollute)

# Retrieve dataset links from the EPA website
link_table <- tidypollute::scrape_epa_airdata_zip_links()

# Alternative: Use pre-compiled link tables from the package
link_table_built_in <- tidypollute::epa_zip_links

# Alternative: Use Archive.org’s backup (thank you for your service!)
link_table_archive <- tidypollute::epa_zip_links_archive
```

------------------------------------------------------------------------

### Step 2: Filter for WIND Data (1991)

Now, let's filter the dataset to focus on **WIND data for 1991**.

```{r}
links_1991_wind <- link_table %>%
  filter(year == 1991 & analyte == "WIND")
```

------------------------------------------------------------------------

### Step 3: Download and Stack WIND Data

#### Option 1: Download All Files (Takes Time)

```{r}
df_1991_wind <- tidypollute::download_stack_epa_airdata(links_1991_wind$url,
                                                         download = TRUE,
                                                         stack = TRUE,
                                                         output_dir = "data/")
```

#### Option 2: Extract Links and Download in One Step

You can **filter and download** data in a single pipeline.

```{r, message=FALSE, warning=FALSE, echo=TRUE}
df_1991_wind <- tidypollute::scrape_epa_airdata_zip_links() %>%
  filter(year == 1991, analyte == "WIND") %>%
  tidypollute::download_stack_epa_airdata(urls = .,
                                          download = TRUE,
                                          stack = TRUE,
                                          output_dir = "data/")
```

------------------------------------------------------------------------

### Step 4: (Optional) Download All EPA AirData

If you want to **backup all available EPA AirData**, uncomment and run the following block.

⚠️ **This will take a long time**.

```{r, message=FALSE, warning=FALSE, echo=FALSE}
# df_all <- tidypollute::scrape_epa_airdata_zip_links() %>%
#   tidypollute::download_stack_epa_airdata(urls = .,
#                                           download = TRUE,
#                                           stack = TRUE,
#                                           output_dir = "data/")
```

------------------------------------------------------------------------

## Summary

This notebook provides a **step-by-step workflow** for retrieving EPA AirData using `tidypollute`. You can:

✅ **Retrieve and filter dataset links (to zip files)**\
✅ **Download specific pollutant data** (e.g., Ozone, Wind)\
✅ **Stack and process the downloaded files**\
✅ **Scale up to download all available EPA AirData**

For more details, check out [`tidypollute` documentation](https://github.com/nelsonroque/tidypollute).
