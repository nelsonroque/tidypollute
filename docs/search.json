[{"path":[]},{"path":"/articles/atmotube.html","id":"goals-of-this-notebook","dir":"Articles","previous_headings":"Getting Started with tidypollute","what":"Goals of this Notebook","title":"tidypollute: Getting Started with the Atmotube Cloud API","text":"vignette demonstrates use get_atmotube_data() download Atmotube data via Atmotube Cloud API using tidypollute package.","code":""},{"path":"/articles/atmotube.html","id":"api-authentication","dir":"Articles","previous_headings":"Getting Started with tidypollute","what":"API Authentication","title":"tidypollute: Getting Started with the Atmotube Cloud API","text":"access Atmotube API, need: - API key (provided Atmotube) - MAC address Atmotube device Make sure store API key securely.","code":""},{"path":"/articles/atmotube.html","id":"introduction","dir":"Articles","previous_headings":"Getting Started with tidypollute","what":"Introduction","title":"tidypollute: Getting Started with the Atmotube Cloud API","text":"vignette demonstrates use get_atmotube_data() function retrieve air quality data Atmotube Cloud API. function automatically adapts requested date range, making single API request short durations batching requests longer durations.","code":""},{"path":"/articles/atmotube.html","id":"retrieving-atmotube-data","dir":"Articles","previous_headings":"Getting Started with tidypollute","what":"Retrieving Atmotube Data","title":"tidypollute: Getting Started with the Atmotube Cloud API","text":"get_atmotube_data() function fetches Atmotube air quality data based user-defined parameters.","code":""},{"path":"/articles/atmotube.html","id":"required-parameters","dir":"Articles","previous_headings":"Getting Started with tidypollute > Retrieving Atmotube Data","what":"Required Parameters","title":"tidypollute: Getting Started with the Atmotube Cloud API","text":"api_key: Atmotube API key. mac: MAC address Atmotube device (format: \"aa:bb:cc:dd:ee:ff\"). start_date: Start date YYYY-MM-DD format. end_date: End date YYYY-MM-DD format.","code":""},{"path":"/articles/atmotube.html","id":"optional-parameters","dir":"Articles","previous_headings":"Getting Started with tidypollute > Retrieving Atmotube Data","what":"Optional Parameters","title":"tidypollute: Getting Started with the Atmotube Cloud API","text":"order: Sorting order, either \"asc\" (ascending) \"desc\" (descending). Default \"asc\". format: Response format, either \"json\" \"csv\". Default \"json\". offset: Starting index pagination. Default 0. limit: Number records retrieve per request (1-1440). Default 1440. separator: CSV separator format=\"csv\". Default \",\". base_url: API base URL. Default \"https://api.atmotube.com/api/v1/data\". Also table:","code":""},{"path":"/articles/atmotube.html","id":"example-fetch-data-for-a-short-period-within-7-days","dir":"Articles","previous_headings":"Getting Started with tidypollute > Retrieving Atmotube Data","what":"Example: Fetch Data for a Short Period (Within 7 Days)","title":"tidypollute: Getting Started with the Atmotube Cloud API","text":"","code":"api_key <- \"your_api_key_here\" mac <- \"aa:bb:cc:dd:ee:ff\" start_date <- \"2024-06-01\" end_date <- \"2024-06-03\"  data <- get_atmotube_data(api_key, mac, start_date, end_date) print(data)"},{"path":"/articles/atmotube.html","id":"example-fetch-data-for-a-longer-period-more-than-7-days","dir":"Articles","previous_headings":"Getting Started with tidypollute > Retrieving Atmotube Data","what":"Example: Fetch Data for a Longer Period (More than 7 Days)","title":"tidypollute: Getting Started with the Atmotube Cloud API","text":"function automatically breaks request 7-day chunks 1-day overlap.","code":"start_date <- \"2024-06-01\" end_date <- \"2024-07-01\"  data <- get_atmotube_data(api_key, mac, start_date, end_date) print(data)"},{"path":"/articles/atmotube.html","id":"handling-csv-output","dir":"Articles","previous_headings":"Getting Started with tidypollute > Retrieving Atmotube Data","what":"Handling CSV Output","title":"tidypollute: Getting Started with the Atmotube Cloud API","text":"prefer CSV format, set format=\"csv\":","code":"data_csv <- get_atmotube_data(api_key, mac, start_date, end_date, format=\"csv\") writeLines(data_csv, \"atmotube_data.csv\")"},{"path":"/articles/atmotube.html","id":"example-fetching-data-for-multiple-devices-across-large-intervals","dir":"Articles","previous_headings":"Getting Started with tidypollute > Retrieving Atmotube Data","what":"Example: Fetching Data for Multiple Devices, Across Large Intervals","title":"tidypollute: Getting Started with the Atmotube Cloud API","text":"","code":"library(dplyr) library(tidyr) library(purrr)  # Example table with multiple Atmotube devices & date ranges mac_table <- tibble::tibble(   mac = c(\"aa:bb:cc:dd:ee:ff\", \"11:22:33:44:55:66\"),   start_date = c(\"2024-06-01\", \"2024-06-10\"),   end_date = c(\"2024-07-01\", \"2024-07-05\") )  # Your Atmotube API Key api_key <- \"your_api_key_here\"  # Fetch data and unnest results into a long format results_df <- mac_table %>%   rowwise() %>%   mutate(data = list(get_atmotube_data(api_key, mac, start_date, end_date))) %>%   ungroup() %>%   unnest_wider(data)  # Expands list columns into separate columns  # View tidy output print(results_df)"},{"path":"/articles/atmotube.html","id":"error-handling","dir":"Articles","previous_headings":"Getting Started with tidypollute","what":"Error Handling","title":"tidypollute: Getting Started with the Atmotube Cloud API","text":"function validates parameters making API request. invalid parameter provided, error message returned. Common checks include: - Invalid MAC address format. - Invalid date format. - Start date end date. - Exceeding API limits pagination record retrieval.","code":""},{"path":"/articles/atmotube.html","id":"summary","dir":"Articles","previous_headings":"Getting Started with tidypollute","what":"Summary","title":"tidypollute: Getting Started with the Atmotube Cloud API","text":"vignette demonstrated use get_atmotube_data() function retrieve air quality data Atmotube API efficiently. function dynamically handles single requests short periods batched requests long periods comply API limits. questions, refer Atmotube API documentation contact support. Happy coding! 🚀","code":""},{"path":[]},{"path":"/articles/easy-request.html","id":"goals-of-this-notebook","dir":"Articles","previous_headings":"Getting Started with tidypollute","what":"Goals of this Notebook","title":"tidypollute: Getting Started","text":"notebook demonstrates download stack EPA AirData files 1991-1992 focusing Ozone (44201) data. simplest request retrieves EPA AirData specific analyte (pollutant) given time range (e.g., download daily ozone (44201) data 1991-1992).","code":"library(tidypollute) ozone <- get_epa_airdata(analyte = \"44201\", start_year = 1991, end_year = 1992, freq = \"daily\") ##  ## Preparing to download: ## Analyte: 44201  ## Years: 1991 to 1992  ## Number of files: 2  ## Freq of data: daily  ## Output directory: data/ # Load necessary libraries library(tidyverse) library(ggplot2) library(patchwork) library(viridis) library(hrbrthemes) library(extrafont) library(lubridate)  # For handling dates  # Ensure Helvetica or Arial is available loadfonts(device = \"win\") theme_set(theme_minimal(base_family = \"Helvetica\"))  # Use Arial if Helvetica isn't available  # ---- Data Preparation ----  # Convert date_local to Date format ozone_f <- ozone %>%   mutate(date_local = as.Date(date_local),          day_of_week = wday(date_local, label = TRUE, abbr = FALSE),          week_of_year = isoweek(date_local),          year = year(date_local)) %>%   filter(year == 1992) %>%   full_join(us_states) %>%   mutate(max_hour = as.numeric(x1st_max_hour))  # Aggregate mean ozone levels per day ozone_summary <- ozone_f %>%   group_by(date_local, state_region) %>%   summarise(mean_ozone = mean(arithmetic_mean, na.rm = TRUE)) # Define key holidays holidays <- tibble(   date_local = as.Date(c(\"1991-07-04\", \"1991-12-01\", \"1992-07-04\", \"1992-12-01\")),   holiday = c(\"July 4\", \"Dec 1\", \"July 4\", \"Dec 1\") ) # ---- Panel 1: Heatmap ----  heatmap_plot <- ggplot(ozone_f, aes(x = date_local, y = max_hour, fill = x1st_max_value)) +   geom_tile() +   scale_fill_viridis(option = \"magma\", name = \"Ozone Level\", direction = -1) +   labs(     title = \"Hour of Worst (Max) Ozone Concentrations\",     x = \"Date\",     y = \"Hour of Day\"   ) +   theme_minimal(base_family = \"Helvetica\") +   theme(     plot.title = element_text(size = 18, face = \"bold\", margin = margin(b = 10)),     axis.title = element_text(size = 14, face = \"bold\"),     axis.text = element_text(size = 12),     legend.position = \"right\"   ) heatmap_plot # ---- Panel 2: Time Series with WHO Thresholds ---- time_series_plot <- ggplot(ozone_summary, aes(x = date_local, y = mean_ozone)) +   #geom_line(color = \"#0072B2\", size = 1.2, alpha = 0.8) +   geom_jitter(color = \"#D55E00\", size = 2, alpha = 0.4) +   # geom_hline(data = who_thresholds, aes(yintercept = threshold, linetype = label), color = \"gray50\") +   geom_vline(data = holidays, aes(xintercept = as.numeric(date_local)), linetype = \"dashed\", color = \"red\", size = 0.8) +   labs(     title = \"Daily Average Ozone Levels\",     x = \"Date\",     y = \"Ozone (ppm)\"   ) +   theme_minimal(base_family = \"Helvetica\") +   theme(     plot.title = element_text(size = 18, face = \"bold\", margin = margin(b = 10)),     axis.title = element_text(size = 14, face = \"bold\"),     axis.text = element_text(size = 10),     plot.caption = element_text(size = 10, face = \"italic\", hjust = 1),     legend.position = \"bottom\"   ) +   facet_grid(.~ state_region)  time_series_plot # ---- Panel 3: Variability by Week & Day of the Week ----  variability_plot <- ggplot(ozone_f, aes(x = week_of_year, y = arithmetic_mean, group = week_of_year)) +   geom_boxplot(fill = \"#0072B2\", alpha = 0.5) +   facet_wrap(~ day_of_week, scales = \"free_y\") +   labs(     title = \"Ozone Variability by Week & Day\",     x = \"Week of Year\",     y = \"Ozone (ppm)\"   ) +   theme_minimal(base_family = \"Helvetica\") +   theme(     plot.title = element_text(size = 18, face = \"bold\", margin = margin(b = 10)),     axis.title = element_text(size = 14, face = \"bold\"),     axis.text = element_text(size = 12),     strip.text = element_text(size = 12, face = \"bold\")   )  variability_plot # ---- Combine Plots Using Patchwork ----  final_plot <- (heatmap_plot / time_series_plot / variability_plot) +   plot_annotation(     title = \"Ozone Levels Over Time\",     subtitle = \"Hourly Concentrations, Daily Trends with WHO Guidelines, and Weekly Variability\",     caption = \"Data Source: EPA AirData (https://aqs.epa.gov/aqsweb/airdata/download_files.html)\",     theme = theme(       plot.title = element_text(size = 22, face = \"bold\", margin = margin(b = 12)),       plot.subtitle = element_text(size = 16, margin = margin(b = 8)),       plot.caption = element_text(size = 12, face = \"italic\", hjust = 1)     )   )"},{"path":"/articles/easy-request.html","id":"summary","dir":"Articles","previous_headings":"Getting Started with tidypollute","what":"Summary","title":"tidypollute: Getting Started","text":"notebook provides simple workflow retrieving EPA AirData using tidypollute. can: ✅ Retrieve filter dataset links (zip files). ✅ Download specific pollutant data (e.g., Ozone, Wind). ✅ Stack process downloaded files. ✅ Scales download available EPA AirData. details, check tidypollute documentation.","code":""},{"path":[]},{"path":"/articles/getting-to-know-tidypollute.html","id":"goals-of-this-notebook","dir":"Articles","previous_headings":"tidypollute: Getting to Know the Package","what":"Goals of this Notebook","title":"tidypollute: Getting to Know the Package","text":"notebook orients tidypollute functions functional example (pun intended). simplest request retrieves EPA AirData specific analyte (pollutant) given time range (e.g., download daily ozone (44201) data 1991-1992).","code":"library(tidypollute) possible_analytes = get_epa_airdata_analyte_codes() possible_analytes ##  [1] \"sites\"           \"monitors\"        \"conc_by_monitor\" \"aqi_by_cbsa\"     ##  [5] \"aqi_by_county\"   \"44201\"           \"42401\"           \"42101\"           ##  [9] \"42602\"           \"88101\"           \"88502\"           \"81102\"           ## [13] \"86101\"           \"SPEC\"            \"PM10SPEC\"        \"WIND\"            ## [17] \"TEMP\"            \"PRESS\"           \"RH_DP\"           \"HAPS\"            ## [21] \"VOCS\"            \"NONOxNOy\"        \"LEAD\"            \"all\" library(tidypollute) vocs <- get_epa_airdata(analyte = \"LEAD\",                          start_year = 1991,                          end_year = 1992,                          freq = \"daily\") ##  ## Preparing to download: ## Analyte: LEAD  ## Years: 1991 to 1992  ## Number of files: 2  ## Freq of data: daily  ## Output directory: data/"},{"path":"/articles/getting-to-know-tidypollute.html","id":"summary","dir":"Articles","previous_headings":"tidypollute: Getting to Know the Package","what":"Summary","title":"tidypollute: Getting to Know the Package","text":"notebook provides orientation various tidypollute functions. details, check tidypollute documentation.","code":""},{"path":[]},{"path":"/articles/hexsticker.html","id":"goals-of-this-notebook","dir":"Articles","previous_headings":"Getting Started with tidypollute","what":"Goals of this Notebook","title":"tidypollute: Making of the Hex Logo!","text":"","code":"# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  # Load necessary libraries library(hexSticker) library(ggplot2) library(showtext) library(dplyr) library(lubridate) library(tidypollute)  # Assuming this is your package  # >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  ## Load Google Fonts (for a handwritten, natural style) font_add_google(\"IBM Plex Sans\", \"specialelite\") #font_add_google(\"Zilla Slab\", \"specialelite\") #font_add_google(\"Special Elite\", \"specialelite\") showtext_auto()  # Enable text rendering for the sticker # Get EPA air pollution data ---- df_1991_co <- tidypollute::epa_airdata_links %>%   filter(year == 1991, unit_of_analysis == \"daily\", analyte == \"42101\") %>%   tidypollute::download_stack_epa_airdata(urls = ., download = TRUE, stack = TRUE, output_dir = \"data/\")  # Filter for Tampa, Florida ----- df_1991_co_filt <- df_1991_co %>%   filter(state_name == \"Florida\", city_name == \"Tampa\") %>%   mutate(dt_wday = wday(date_local, label = TRUE)) # Count records per day ----- df_1991_co_filt %>%    count(date_local) %>%   head(.) ## # A tibble: 6 × 2 ##   date_local     n ##   <date>     <int> ## 1 1991-01-01     6 ## 2 1991-01-02     6 ## 3 1991-01-03     6 ## 4 1991-01-04     6 ## 5 1991-01-05     6 ## 6 1991-01-06     6 # Create the ggplot visualization ------ p <- ggplot(df_1991_co_filt, aes(x = date_local, y = arithmetic_mean)) +   geom_jitter(size = 0.2, alpha = 0.4, color=\"#C0C0C0\") +  # Smoky gray for pollution particulates   geom_smooth(color = \"royalblue\", alpha = 0.2, size = 0.9) +   theme_minimal(base_family = \"specialelite\") +  # Use Google font   theme(     axis.text.y = element_blank(),     axis.title.y = element_blank(),     plot.background = element_rect(fill = \"transparent\", color = NA),     panel.background = element_rect(fill = \"transparent\", color = NA),     panel.grid.major = element_blank(),     panel.grid.minor = element_blank()   ) p # Generate the hex sticker ------ sticker(   subplot = p,   h_fill = \"white\",        # Dark gray smog background   h_color = \"royalblue\",       # Industrial brown border   package = \"tidypollute\",   p_color = \"royalblue\",       # Muted yellow text (air quality warnings)   p_family = \"specialelite\",   p_size = 20,               # Adjust text size   p_y = 1.25,                 # Adjust text height position   s_x = 1,    s_y = 0.85,       # Scale and position the plot   s_width = 1.3,    s_height = 0.95,   filename = \"../man/figures/logo.png\" )"},{"path":"/articles/hexsticker.html","id":"summary","dir":"Articles","previous_headings":"Getting Started with tidypollute","what":"Summary","title":"tidypollute: Making of the Hex Logo!","text":"always wanted know programmatically make hex logos R packages. notebook shows make hex logo tidypollute package. logo based air pollution data EPA Tampa, Florida 1991, package author born. logo visualization daily average CO levels Tampa 1991. logo hex sticker can used tidypollute package.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nelson Roque. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Roque N (2025). tidypollute: Make simpler working environmental data products. R package version 0.1.5.","code":"@Manual{,   title = {tidypollute: Make simpler working with environmental data products},   author = {Nelson Roque},   year = {2025},   note = {R package version 0.1.5}, }"},{"path":"/index.html","id":"tidypollute-","dir":"","previous_headings":"","what":"Make simpler working with environmental data products","title":"Make simpler working with environmental data products","text":"🚀 R package working EPA AirData flat files AQS API! 🚀 Developer: Dr. Nelson Roque | ORCID: https://orcid.org/0000-0003-1184-202X","code":""},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Make simpler working with environmental data products","text":"tidypollute lightweight R package designed make working environmental data easy, tidy, efficient. Whether ’re researcher, policymaker, just environmental data enthusiast, package helps import, clean, analyze large-scale air pollution datasets minimal hassle. Learn , reading package’s Documentation. 🔥 use tidypollute? ✔️ Tidy: Designed tidyverse mind seamless integration. ✔️ Fast: Optimized dplyr functions handling big air quality datasets. ✔️ Flexible: Supports flat files (soon!) real-time API queries.","code":""},{"path":"/index.html","id":"id_-current-features","dir":"","previous_headings":"Overview","what":"📌 Current Features","title":"Make simpler working with environmental data products","text":"✅ Read process EPA AirData flat files ✅ Read EPA AirData metadata ✅ Extract data Atmotube Cloud API ✅ Tidy filter air pollution data","code":""},{"path":"/index.html","id":"id_️-roadmap-whats-next","dir":"","previous_headings":"Overview","what":"🛣️🛠 Roadmap: What’s Next?","title":"Make simpler working with environmental data products","text":"Quick, simple visualizations tidy data Integration real-time API endpoinst (EPA AirData, Atmocube, Purple Air, Plume Flow) Add codebooks various datasets Generate DOCX/PDF reports air quality data Merge air quality data Census demographics Interactive mapping integration mapview","code":""},{"path":[]},{"path":"/index.html","id":"installation","dir":"","previous_headings":"🚀 Getting Started","what":"Installation","title":"Make simpler working with environmental data products","text":"hosted GitHub, install : CRAN (coming soon!), install :","code":"devtools::install_github(\"nelsonroque/tidypollute\") install.packages(\"tidypollute\")"},{"path":"/index.html","id":"load-the-package","dir":"","previous_headings":"🚀 Getting Started > Installation","what":"Load the package","title":"Make simpler working with environmental data products","text":"","code":"library(tidypollute)"},{"path":"/index.html","id":"id_-contributions-welcome","dir":"","previous_headings":"","what":"💡 Contributions Welcome!","title":"Make simpler working with environmental data products","text":"📌 ideas? Found bug? Want improve package? Open issue!. 📜 Code Conduct - Please respectful follow community guidelines.","code":""},{"path":"/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Make simpler working with environmental data products","text":"development tidypollute made possible support NIA (P01-AG003949) Dr. Roque’s PSU Start-funds. Thank Dr. Charles B Hall, Dr. Dean Hosgood, Hailey Andrews, support manuscript reads. Thank Dr. Alexis Santos-Lozada Dr. Johnny Felt function name brainstorming. Thank , Hailey Andrews, helping brainstorm name package. Thank , Karishma Christmas, documentation support. 🌎 Resources: 📌 EPA AQS API Docs 📌 EPA Daily Air Quality Reports 📌 Census Reference Files 📌 Census GEOIDs Ready make sense air quality data tidy way? 🌱 Let’s go! 🚀","code":""},{"path":"/paper.html","id":null,"dir":"","previous_headings":"","what":"Summary","title":"Summary","text":"Understanding air quality essential public health, environmental policy, research. tidypollute R package currently provides tools efficiently work EPA AirData flat files [@epa_airdata], offering structured approach importing, cleaning, analyzing air pollution data. package designed environmental researchers, policymakers, analysts need streamlined access large-scale air quality datasets without overhead direct API calls. package, published GPL-3 license, facilitates efficient data handling air quality measurements PM2.5, ozone, NO2, CO, SO2, others. allows users explore long-term trends, compare geographic variations, generate custom summaries. possible analyte codes, please see tidypollute::get_epa_airdata_analyte_codes(). rest documentation, please visit: [@tidypollute_docs] Efficient EPA AirData import: Load preprocess flat files specifying analyte (e.g., “44201” ozone), start end year query (e.g., start_year=1991, end_year=2000), frequency (e.g., freq = “hourly”, “daily”, “annual”) function, get_epa_airdata(). Automated metadata scraping: function get_epa_airdata_zip_links() gathers --date links AirData files (along archives 2024 built datasets), get_epa_airdata_analyte_codes() gather various file types handy table (.e., tibble). Streamlined bulk downloads: download_stack_epa_airdata() enables batch downloading multiple datasets. need data.frame (tibble) column named url download. means can download, example, 1991 Ozone data 2001 Particulate Matter, PM2.5 data. Built-EPA dataset archives: epa_airdata_links, epa_airdata_monitoring_sites epa_superfund_npl_sites, name . Access Wearable Air Quality data Wearables sensor data fleet research project. currently supports Atmotube Pro device. API Key required Atmotube. Integration real-time API endpoints additional environmental datasets (e.g., water quality). Expansion support non-U.S. wearable air quality data sources (e.g., Purple Air, Flow2). Visualization tools spatial temporal trends. several datasets hosted inside package. epa_airdata_monitoring_sites dataset contains metadata EPA AirData monitoring sites (February 5, 2025). epa_airdata_links dataset contains links pre-generated flat files, epa_airdata_links_archive contains links flat files, archived Archive.org. epa_superfund_npl_sites dataset contains metadata Superfund sites (February 5, 2025). us_states dataset containing basic metadata states (e.g., abbreviations, size, region) help getting started, please see vignettes included package.","code":""},{"path":"/paper.html","id":"statement-of-need","dir":"","previous_headings":"","what":"Statement of Need","title":"Summary","text":"Air quality critical factor influencing public health, yet analyzing EPA AirData can cumbersome due size complexity raw datasets. Many existing tools focus API-based retrieval, large-scale historical analyses often require working directly flat files provided EPA. tidypollute package aims address gap : Providing structured functions load process EPA flat files efficiently Reducing barriers researchers analysts may experience raw EPA data processing Enhancing accessibility environmental data public health, environmental policy, research. Laying groundwork future environmental data integrations offering lightweight yet powerful R package, now, tailored EPA AirData [@epa_airdata], project aims support users make data-driven decisions regarding air quality policy, environmental exposures, public health. anyone’s research depends air quality data, tool make seamless download backup data, just one line code.","code":""},{"path":"/paper.html","id":"figures","dir":"","previous_headings":"","what":"Figures","title":"Summary","text":"Figure 1. Primary functions package results. Panel depicts function parses AirData flat file home page zip file links. Panel B depicts one-liner R function downloads flat files specific analyte.","code":""},{"path":"/paper.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Summary","text":"development tidypollute made possible support NIA (P01-AG003949) Dr. Roque’s PSU Start-funds. Thank Dr. Charles B Hall, Dr. Dean Hosgood, Hailey Andrews, support manuscript reads. Thank Dr. Alexis Santos-Lozada Dr. Johnny Felt function name brainstorming. Thank , Hailey Andrews, helping brainstorm name package. Thank , Karishma Christmas, documentation support.","code":""},{"path":"/paper.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Summary","text":"Data Source Documentation","code":""},{"path":"/reference/download_stack_epa_airdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Download, Extract, and Optionally Read or Combine CSV Files from EPA AirNow ZIP URLs — download_stack_epa_airdata","title":"Download, Extract, and Optionally Read or Combine CSV Files from EPA AirNow ZIP URLs — download_stack_epa_airdata","text":"function downloads ZIP files provided URLs (either character vector data frame column), extracts CSV files, optionally reads combines single tibble.","code":""},{"path":"/reference/download_stack_epa_airdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download, Extract, and Optionally Read or Combine CSV Files from EPA AirNow ZIP URLs — download_stack_epa_airdata","text":"","code":"download_stack_epa_airdata(   urls,   output_dir = tempdir(),   download = TRUE,   unzip = TRUE,   read_csvs = TRUE,   stack = TRUE,   clean_names = TRUE )"},{"path":"/reference/download_stack_epa_airdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download, Extract, and Optionally Read or Combine CSV Files from EPA AirNow ZIP URLs — download_stack_epa_airdata","text":"urls character vector URLs data frame containing column named urls. output_dir directory path downloaded extracted files stored. Defaults temporary directory. download Logical. Whether download ZIP files. Defaults TRUE. unzip Logical. Whether extract ZIP files. Requires download = TRUE existing ZIPs. Defaults TRUE. read_csvs Logical. Whether read extracted CSVs R. Requires unzip = TRUE existing extracted files. Defaults TRUE. stack Logical. Whether combine extracted CSVs single tibble. Requires read_csvs = TRUE. Defaults TRUE. clean_names Logical. Whether clean column names final tibble (using janitor::clean_names()). Defaults TRUE.","code":""},{"path":"/reference/download_stack_epa_airdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download, Extract, and Optionally Read or Combine CSV Files from EPA AirNow ZIP URLs — download_stack_epa_airdata","text":"read_csvs = TRUE, returns either tibble combining extracted CSV files (stack = TRUE) list tibbles (stack = FALSE). read_csvs = FALSE, returns list file paths extracted CSVs. Skips URLs fail download extract.","code":""},{"path":"/reference/download_stack_epa_airdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download, Extract, and Optionally Read or Combine CSV Files from EPA AirNow ZIP URLs — download_stack_epa_airdata","text":"","code":"if (FALSE) { df <- tidypollute::scrape_epa_airdata_zip_links()  # Filter dataset and pass a column of URLs filtered_df <- df %>% filter(year == 1991, analyte == \"WIND\")  # Use function with a data frame download_stack_epa_airdata(filtered_df, download = TRUE, stack = TRUE, output_dir = \"data/\")  # Use function with a character vector download_stack_epa_airdata(filtered_df$urls, download = TRUE, stack = TRUE, output_dir = \"data/\") }"},{"path":"/reference/epa_airdata_links.html","id":null,"dir":"Reference","previous_headings":"","what":"EPA AirData ZIP File Links Metadata — epa_airdata_links","title":"EPA AirData ZIP File Links Metadata — epa_airdata_links","text":"dataset contains metadata downloadable ZIP files EPA AirData website. metadata includes file links, year, unit analysis, analyte type, human-readable descriptions.","code":""},{"path":"/reference/epa_airdata_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EPA AirData ZIP File Links Metadata — epa_airdata_links","text":"","code":"epa_airdata_links"},{"path":"/reference/epa_airdata_links.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"EPA AirData ZIP File Links Metadata — epa_airdata_links","text":"tibble following columns: year Year extracted filename (present). unit_of_analysis Type data aggregation (e.g., \"daily\", \"hourly\", \"annual\"). analyte pollutant air quality measure extracted filename. url full URL download ZIP file. analyte_description human-readable description analyte.","code":""},{"path":"/reference/epa_airdata_links.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"EPA AirData ZIP File Links Metadata — epa_airdata_links","text":"https://aqs.epa.gov/aqsweb/airdata/download_files.html","code":""},{"path":"/reference/epa_airdata_links.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EPA AirData ZIP File Links Metadata — epa_airdata_links","text":"","code":"data(epa_airdata_links) head(epa_airdata_links) #> # A tibble: 6 × 5 #>   year  unit_of_analysis analyte         url                 analyte_description #>   <chr> <chr>            <chr>           <chr>               <chr>               #> 1 all   aqs              sites           https://aqs.epa.go… Monitoring sites m… #> 2 all   aqs              monitors        https://aqs.epa.go… Air quality monito… #> 3 2024  annual           conc_by_monitor https://aqs.epa.go… Annual concentrati… #> 4 2024  annual           aqi_by_cbsa     https://aqs.epa.go… Annual AQI by Core… #> 5 2024  annual           aqi_by_county   https://aqs.epa.go… Annual AQI by coun… #> 6 2023  annual           conc_by_monitor https://aqs.epa.go… Annual concentrati…"},{"path":"/reference/epa_airdata_links_archive.html","id":null,"dir":"Reference","previous_headings":"","what":"EPA AirData ZIP File Links Metadata — epa_airdata_links_archive","title":"EPA AirData ZIP File Links Metadata — epa_airdata_links_archive","text":"dataset contains metadata downloadable ZIP files EPA AirData website. metadata includes file links, year, unit analysis, analyte type, human-readable descriptions.","code":""},{"path":"/reference/epa_airdata_links_archive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EPA AirData ZIP File Links Metadata — epa_airdata_links_archive","text":"","code":"epa_airdata_links_archive"},{"path":"/reference/epa_airdata_links_archive.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"EPA AirData ZIP File Links Metadata — epa_airdata_links_archive","text":"tibble following columns: year Year extracted filename (present). unit_of_analysis Type data aggregation (e.g., \"daily\", \"hourly\", \"annual\"). analyte pollutant air quality measure extracted filename. url full URL download ZIP file. analyte_description human-readable description analyte.","code":""},{"path":"/reference/epa_airdata_links_archive.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"EPA AirData ZIP File Links Metadata — epa_airdata_links_archive","text":"https://web.archive.org/web/20250126115248/https://aqs.epa.gov/aqsweb/airdata/download_files.html","code":""},{"path":"/reference/epa_airdata_links_archive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EPA AirData ZIP File Links Metadata — epa_airdata_links_archive","text":"","code":"data(epa_airdata_links_archive) head(epa_airdata_links_archive) #> # A tibble: 6 × 5 #>   year  unit_of_analysis analyte         url                 analyte_description #>   <chr> <chr>            <chr>           <chr>               <chr>               #> 1 all   aqs              sites           https://web.archiv… Monitoring sites m… #> 2 all   aqs              monitors        https://web.archiv… Air quality monito… #> 3 2024  annual           conc_by_monitor https://web.archiv… Annual concentrati… #> 4 2024  annual           aqi_by_cbsa     https://web.archiv… Annual AQI by Core… #> 5 2024  annual           aqi_by_county   https://web.archiv… Annual AQI by coun… #> 6 2023  annual           conc_by_monitor https://web.archiv… Annual concentrati…"},{"path":"/reference/epa_airdata_monitoring_sites.html","id":null,"dir":"Reference","previous_headings":"","what":"EPA Air Quality Monitoring Sites Metadata — epa_airdata_monitoring_sites","title":"EPA Air Quality Monitoring Sites Metadata — epa_airdata_monitoring_sites","text":"dataset contains metadata air quality monitoring sites United States. includes site location details, land use classification, elevation, operational dates, relevant attributes.","code":""},{"path":"/reference/epa_airdata_monitoring_sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EPA Air Quality Monitoring Sites Metadata — epa_airdata_monitoring_sites","text":"","code":"epa_airdata_monitoring_sites"},{"path":"/reference/epa_airdata_monitoring_sites.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"EPA Air Quality Monitoring Sites Metadata — epa_airdata_monitoring_sites","text":"tibble following columns: State Code FIPS code representing U.S. state. County Code FIPS code representing county within state. Site Number Unique identifier monitoring site within county. Latitude Latitude monitoring site decimal degrees. Longitude Longitude monitoring site decimal degrees. Datum Geodetic datum used latitude/longitude coordinates (e.g., \"WGS84\"). Elevation Elevation site meters sea level. Land Use Classification land use surrounding site (e.g., \"RESIDENTIAL\", \"AGRICULTURAL\"). Location Setting General setting site (e.g., \"URBAN CENTER CITY\", \"RURAL\"). Site Established Date Date monitoring site established. Site Closed Date Date site ceased operation (applicable). Met Site State Code FIPS code meteorological site, applicable. Met Site County Code FIPS code county meteorological site located, applicable. Met Site Site Number Unique identifier associated meteorological site, applicable. Met Site Type Type meteorological site, applicable. Met Site Distance Distance monitoring site associated meteorological site, kilometers. Met Site Direction Cardinal direction monitoring site meteorological site. GMT Offset Offset GMT (Greenwich Mean Time) hours. Owning Agency Agency responsible maintaining monitoring site. Local Site Name Locally assigned name monitoring site. Address Physical address monitoring site. Zip Code ZIP code monitoring site located. State Name Full name state site located. County Name Full name county site located. City Name City monitoring site located, applicable. CBSA Name Core-Based Statistical Area (CBSA) associated site, applicable. Tribe Name Name Native American tribe associated site, applicable. Extraction Date Date data extracted.","code":""},{"path":"/reference/epa_airdata_monitoring_sites.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"EPA Air Quality Monitoring Sites Metadata — epa_airdata_monitoring_sites","text":"https://www.epa.gov/outdoor-air-quality-data","code":""},{"path":"/reference/epa_airdata_monitoring_sites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EPA Air Quality Monitoring Sites Metadata — epa_airdata_monitoring_sites","text":"","code":"data(epa_airdata_monitoring_sites) head(epa_airdata_monitoring_sites) #> # A tibble: 6 × 28 #>   `State Code` `County Code` `Site Number` Latitude Longitude Datum Elevation #>   <chr>        <chr>         <chr>            <dbl>     <dbl> <chr>     <dbl> #> 1 01           001           0001              32.4     -86.5 WGS84        64 #> 2 01           001           0002              32.4     -86.4 WGS84         0 #> 3 01           001           0003              32.3     -86.8 WGS84        41 #> 4 01           003           0001               0         0   NAD27         0 #> 5 01           003           0002              30.6     -87.7 WGS84         0 #> 6 01           003           0003              30.6     -87.7 WGS84        49 #> # ℹ 21 more variables: `Land Use` <chr>, `Location Setting` <chr>, #> #   `Site Established Date` <date>, `Site Closed Date` <date>, #> #   `Met Site State Code` <chr>, `Met Site County Code` <chr>, #> #   `Met Site Site Number` <chr>, `Met Site Type` <chr>, #> #   `Met Site Distance` <dbl>, `Met Site Direction` <chr>, `GMT Offset` <dbl>, #> #   `Owning Agency` <chr>, `Local Site Name` <chr>, Address <chr>, #> #   `Zip Code` <chr>, `State Name` <chr>, `County Name` <chr>, …"},{"path":"/reference/epa_superfund_npl_sites.html","id":null,"dir":"Reference","previous_headings":"","what":"EPA Superfund NPL Sites Data — epa_superfund_npl_sites","title":"EPA Superfund NPL Sites Data — epa_superfund_npl_sites","text":"dataset contains information Superfund National Priorities List (NPL) sites maintained U.S. Environmental Protection Agency (EPA). includes site names, locations, EPA identifiers, status, links official EPA records.","code":""},{"path":"/reference/epa_superfund_npl_sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EPA Superfund NPL Sites Data — epa_superfund_npl_sites","text":"","code":"epa_superfund_npl_sites"},{"path":"/reference/epa_superfund_npl_sites.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"EPA Superfund NPL Sites Data — epa_superfund_npl_sites","text":"data frame following columns: site_name Character. Name Superfund site. site_score Numeric. EPA's hazard ranking system score site. site_epa_id Character. Unique EPA identifier site. sems_id Numeric. SEMS (Superfund Enterprise Management System) identifier. sits_id Numeric. Internal site tracking ID. region_id Numeric. EPA region site located. state Character. U.S. state site located. city Character. City municipality site. county Character. County site located. status Character. current status site (e.g., NPL Site, Deleted NPL Site). deletion_date Character. Date site removed NPL (applicable). site_listing_narrative Character. HTML-formatted description site EPA database. site_progress_profile Character. URL link site progress profile. notice_of_data_availability Character. Notice related site data availability. proposed_fr_notice Character. Federal Register notice link proposed listing. deletion_fr_notice Character. Federal Register notice link deletion. final_fr_notice Character. Federal Register notice link final listing. noid_fr_notice Character. Federal Register notice Notice Intent Delete. restoration_fr_notice_jumper_pa Character. Link restoration-related notices. site_has_had_a_partial_deletion Character. Indicates site partial deletion (Yes/). construction_completion_date Character. Date construction completion. construction_completion_number Numeric. Number assigned construction completion. latitude Numeric. Latitude coordinate site. longitude Numeric. Longitude coordinate site. listing_date Character. Date site listed NPL. noid_date Character. Date Notice Intent Delete. proposed_date Character. Date site proposed listing.","code":""},{"path":"/reference/epa_superfund_npl_sites.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"EPA Superfund NPL Sites Data — epa_superfund_npl_sites","text":"U.S. Environmental Protection Agency (EPA) Superfund Data","code":""},{"path":"/reference/get_atmotube_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Atmotube Data from the API (Single or Multi-Day) — get_atmotube_data","title":"Retrieve Atmotube Data from the API (Single or Multi-Day) — get_atmotube_data","text":"Fetches Atmotube air quality data Atmotube Cloud API. Automatically switches batch mode requested date range exceeds 7 days, ensuring compliance API limits preserving one-day overlap.","code":""},{"path":"/reference/get_atmotube_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Atmotube Data from the API (Single or Multi-Day) — get_atmotube_data","text":"","code":"get_atmotube_data(   api_key,   mac,   start_date,   end_date,   order = \"asc\",   format = \"json\",   offset = 0,   limit = 1440,   separator = \",\",   base_url = \"https://api.atmotube.com/api/v1/data\" )"},{"path":"/reference/get_atmotube_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Atmotube Data from the API (Single or Multi-Day) — get_atmotube_data","text":"api_key string containing user's API key (required). mac string representing MAC address Atmotube device (format: \"aa:bb:cc:dd:ee:ff\"). start_date string representing start date (format: \"YYYY-MM-DD\"). end_date string representing end date (format: \"YYYY-MM-DD\"). order string indicating sorting order, either \"asc\" (ascending) \"desc\" (descending). Default \"asc\". format string specifying response format, either \"json\" \"csv\". Default \"json\". offset non-negative integer specifying starting index pagination. Default 0. limit integer (1-1440) defining number records per request. Default 1440. separator string indicating CSV separator format=\"csv\". Default \",\". base_url string representing API base URL (default: \"https://api.atmotube.com/api/v1/data\").","code":""},{"path":"/reference/get_atmotube_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Atmotube Data from the API (Single or Multi-Day) — get_atmotube_data","text":"list (format=\"json\") concatenated CSV string (format=\"csv\").","code":""},{"path":"/reference/get_atmotube_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Atmotube Data from the API (Single or Multi-Day) — get_atmotube_data","text":"","code":"if (FALSE) { api_key <- \"your_api_key_here\" mac <- \"aa:bb:cc:dd:ee:ff\" start_date <- \"2024-06-01\" end_date <- \"2024-06-15\" data <- get_atmotube_data(api_key, mac, start_date, end_date) print(data) }"},{"path":"/reference/get_epa_airdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Download EPA Air Quality Data (EPA AirData Flat Files) — get_epa_airdata","title":"Download EPA Air Quality Data (EPA AirData Flat Files) — get_epa_airdata","text":"Downloads stacks EPA air quality data specified parameters progress tracking.","code":""},{"path":"/reference/get_epa_airdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download EPA Air Quality Data (EPA AirData Flat Files) — get_epa_airdata","text":"","code":"get_epa_airdata(   analyte,   start_year,   end_year,   freq,   output_dir = \"data/\",   prompt_download = F,   archive = FALSE,   archive_id = NULL )"},{"path":"/reference/get_epa_airdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download EPA Air Quality Data (EPA AirData Flat Files) — get_epa_airdata","text":"analyte Character string specifying EPA analyte code (e.g., \"88101\" PM2.5) start_year Numeric value starting year data collection end_year Numeric value ending year data collection freq Character string specifying frequency analysis (e.g., \"daily\", \"hourly\", \"annual\") output_dir Character string specifying directory downloaded files. Defaults \"data/\" prompt_download Boolean indicating whether prompt user downloading (default: False)","code":""},{"path":"/reference/get_epa_airdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download EPA Air Quality Data (EPA AirData Flat Files) — get_epa_airdata","text":"data frame containing stacked EPA air quality data NULL data found download cancelled","code":""},{"path":"/reference/get_epa_airdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download EPA Air Quality Data (EPA AirData Flat Files) — get_epa_airdata","text":"function includes interactive confirmation downloading displays progress bar download process. create output directory exist.","code":""},{"path":"/reference/get_epa_airdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download EPA Air Quality Data (EPA AirData Flat Files) — get_epa_airdata","text":"","code":"if (FALSE) { # Download PM2.5 data pm25_data <- get_epa_data(   analyte = \"88101\",   start_year = 2020,   end_year = 2023,   freq = \"daily\",   output_dir = \"path/to/my/data/\" ) }"},{"path":"/reference/get_epa_airdata_analyte_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Unique Analyte Codes from EPA AirData Archive — get_epa_airdata_analyte_codes","title":"Retrieve Unique Analyte Codes from EPA AirData Archive — get_epa_airdata_analyte_codes","text":"function extracts unique analyte codes available EPA AirData ZIP file links. analyte codes serve identifiers different air quality measurements dataset. function supports fetching data either live website archived snapshot.","code":""},{"path":"/reference/get_epa_airdata_analyte_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Unique Analyte Codes from EPA AirData Archive — get_epa_airdata_analyte_codes","text":"","code":"get_epa_airdata_analyte_codes(archive = FALSE, archive_id = \"20250126115248\")"},{"path":"/reference/get_epa_airdata_analyte_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Unique Analyte Codes from EPA AirData Archive — get_epa_airdata_analyte_codes","text":"archive Logical. TRUE, retrieves analyte codes archived version dataset. archive_id Character. specific archive snapshot ID use archive = TRUE. Default \"20250126115248\", referring recent known snapshot time documentation.","code":""},{"path":"/reference/get_epa_airdata_analyte_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Unique Analyte Codes from EPA AirData Archive — get_epa_airdata_analyte_codes","text":"character vector containing unique analyte codes.","code":""},{"path":"/reference/get_epa_airdata_analyte_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Unique Analyte Codes from EPA AirData Archive — get_epa_airdata_analyte_codes","text":"","code":"analyte_codes <- get_epa_airdata_analyte_codes() print(analyte_codes) #>  [1] \"sites\"           \"monitors\"        \"conc_by_monitor\" \"aqi_by_cbsa\"     #>  [5] \"aqi_by_county\"   \"44201\"           \"42401\"           \"42101\"           #>  [9] \"42602\"           \"88101\"           \"88502\"           \"81102\"           #> [13] \"86101\"           \"SPEC\"            \"PM10SPEC\"        \"WIND\"            #> [17] \"TEMP\"            \"PRESS\"           \"RH_DP\"           \"HAPS\"            #> [21] \"VOCS\"            \"NONOxNOy\"        \"LEAD\"            \"all\""},{"path":"/reference/get_epa_airdata_analyte_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Scrape Table Headers from EPA AirData Webpage — get_epa_airdata_analyte_label","title":"Scrape Table Headers from EPA AirData Webpage — get_epa_airdata_analyte_label","text":"function extracts table headers (<th> elements) EPA AirData download page. removes \"Year\" header, needed analysis, returns tibble containing cleaned list table headers.","code":""},{"path":"/reference/get_epa_airdata_analyte_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scrape Table Headers from EPA AirData Webpage — get_epa_airdata_analyte_label","text":"","code":"get_epa_airdata_analyte_label()"},{"path":"/reference/get_epa_airdata_analyte_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scrape Table Headers from EPA AirData Webpage — get_epa_airdata_analyte_label","text":"tibble single column label containing unique table headers (excluding \"Year\").","code":""},{"path":"/reference/get_epa_airdata_analyte_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scrape Table Headers from EPA AirData Webpage — get_epa_airdata_analyte_label","text":"","code":"table_headers <- get_epa_airdata_analyte_label() print(table_headers) #> # A tibble: 23 × 1 #>    label                          #>    <chr>                          #>  1 Concentration by Monitor       #>  2 AQI by CBSA                    #>  3 AQI by County                  #>  4 Ozone (44201)                  #>  5 SO2 (42401)                    #>  6 CO (42101)                     #>  7 NO2 (42602)                    #>  8 PM2.5 FRM/FEM Mass (88101)     #>  9 PM2.5 non FRM/FEM Mass (88502) #> 10 PM10 Mass (81102)              #> # ℹ 13 more rows"},{"path":"/reference/get_epa_airdata_zip_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Scrape EPA AirData ZIP File Links and Metadata — get_epa_airdata_zip_links","title":"Scrape EPA AirData ZIP File Links and Metadata — get_epa_airdata_zip_links","text":"function scrapes EPA AirData website downloadable ZIP file links, extracts relevant metadata filenames (year, unit analysis, analyte), returns tidy tibble structured information.","code":""},{"path":"/reference/get_epa_airdata_zip_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scrape EPA AirData ZIP File Links and Metadata — get_epa_airdata_zip_links","text":"","code":"get_epa_airdata_zip_links(archive = FALSE, archive_id = \"20250126115248\")"},{"path":"/reference/get_epa_airdata_zip_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scrape EPA AirData ZIP File Links and Metadata — get_epa_airdata_zip_links","text":"archive Logical. TRUE, function retrieves data Wayback Machine (Internet Archive) rather live EPA AirData website. Defaults FALSE. archive_id Character. timestamp ID archived version EPA AirData website Wayback Machine (used archive = TRUE). Defaults \"20250126115248\".","code":""},{"path":"/reference/get_epa_airdata_zip_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scrape EPA AirData ZIP File Links and Metadata — get_epa_airdata_zip_links","text":"tibble structured metadata available ZIP files.","code":""},{"path":"/reference/scrape_epa_airdata_zip_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Scrape EPA AirData ZIP File Links and Metadata — scrape_epa_airdata_zip_links","title":"Scrape EPA AirData ZIP File Links and Metadata — scrape_epa_airdata_zip_links","text":"function scrapes EPA AirData website downloadable ZIP file links, extracts relevant metadata filenames (year, unit analysis, analyte), returns tidy tibble structured information.","code":""},{"path":"/reference/scrape_epa_airdata_zip_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scrape EPA AirData ZIP File Links and Metadata — scrape_epa_airdata_zip_links","text":"","code":"scrape_epa_airdata_zip_links(archive = FALSE, archive_id = \"20250126115248\")"},{"path":"/reference/scrape_epa_airdata_zip_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scrape EPA AirData ZIP File Links and Metadata — scrape_epa_airdata_zip_links","text":"archive Logical. TRUE, function retrieves data Wayback Machine (Internet Archive) rather live EPA AirData website. Defaults FALSE. archive_id Character. timestamp ID archived version EPA AirData website Wayback Machine (used archive = TRUE). Defaults \"20250126115248\".","code":""},{"path":"/reference/scrape_epa_airdata_zip_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scrape EPA AirData ZIP File Links and Metadata — scrape_epa_airdata_zip_links","text":"tibble structured metadata available ZIP files.","code":""},{"path":"/reference/us_states.html","id":null,"dir":"Reference","previous_headings":"","what":"US States Data — us_states","title":"US States Data — us_states","text":"dataset containing geographical regional information US states.","code":""},{"path":"/reference/us_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"US States Data — us_states","text":"","code":"us_states"},{"path":"/reference/us_states.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"US States Data — us_states","text":"tibble 50 rows 7 variables: state_name Character. full name US state (e.g., \"Alabama\"). state_abbreviation Character. two-letter postal abbreviation (e.g., \"AL\"). state_area Numeric. total land area state square miles. state_center_x Numeric. x-coordinate (longitude) geographic center state. state_center_y Numeric. y-coordinate (latitude) geographic center state. state_division Factor. US Census Bureau division classification (e.g., \"South Atlantic\"). state_region Factor. US Census Bureau region classification (e.g., \"South\").","code":""},{"path":"/reference/us_states.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"US States Data — us_states","text":"Data sourced base R datasets: state.name, state.abb, state.area, state.center, state.division, state.region.","code":""},{"path":"/reference/us_states.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"US States Data — us_states","text":"dataset provides basic geographic classification information US state. includes area measurements, geographic center coordinates, census region classifications.","code":""},{"path":"/reference/us_states.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"US States Data — us_states","text":"","code":"data(us_states) head(us_states) #> # A tibble: 6 × 7 #>   state_name state_abbreviation state_area state_center_x state_center_y #>   <chr>      <chr>                   <dbl>          <dbl>          <dbl> #> 1 Alabama    AL                      51609          -86.8           32.6 #> 2 Alaska     AK                     589757         -127.            49.2 #> 3 Arizona    AZ                     113909         -112.            34.2 #> 4 Arkansas   AR                      53104          -92.3           34.7 #> 5 California CA                     158693         -120.            36.5 #> 6 Colorado   CO                     104247         -106.            38.7 #> # ℹ 2 more variables: state_division <fct>, state_region <fct>"},{"path":[]},{"path":[]},{"path":[]},{"path":"/news/index.html","id":"features-0-1-3","dir":"Changelog","previous_headings":"","what":"Features","title":"tidypollute 0.1.3","text":"Built metadata datasets (Superfund, US States Metadata) Get EPA AirData flat files tidy data Vignettes using package (creating logo!) creating visualizations.","code":""}]
